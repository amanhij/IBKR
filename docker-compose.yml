version: '3.9'
name: cryptalis-trading
networks:
  cryptalis-trading-network:
    name: cryptalis_trading_network
    external: false

services:
  ibkr-clientportal-gw:
    build: ./ibkr-clientportal-gw
    container_name: ibkr-clientportal-gw
    restart: on-failure
    healthcheck:
      test: [ 'CMD-SHELL', 'curl --fail http://localhost:5000/v1/api/tickle || exit 1' ]
      interval: 1m
      timeout: 10s
      retries: 20
      start_period: 10s
    networks:
      - cryptalis-trading-network
    ports:
      - '5000:5000'
  cryptalis-trading-server:
    build: ./app
    container_name: cryptalis-trading-server
    restart: on-failure
    depends_on:
      cryptalis-trading-db:
        condition: service_healthy
    env_file: app/.env
    environment:
      - POSTGRES_HOST=cryptalis-trading-db
      - IBKR_GATEWAY_URL=http://ibkr-clientportal-gw:5000/v1/api
      - IBKR_GATEWAY_WS=ws://ibkr-clientportal-gw:5000/v1/api/ws
    networks:
      - cryptalis-trading-network
    ports:
      - '8000:8000'
  cryptalis-trading-bot:
    build: ./app
    container_name: cryptalis-trading-bot
    command: [ 'manage.py', 'trading_bot' ]
    restart: on-failure
    depends_on:
      cryptalis-trading-db:
        condition: service_healthy
      ibkr-clientportal-gw:
        condition: service_healthy
    env_file: app/.env
    environment:
      - POSTGRES_HOST=cryptalis-trading-db
      - IBKR_GATEWAY_URL=http://ibkr-clientportal-gw:5000/v1/api
      - IBKR_GATEWAY_WS=ws://ibkr-clientportal-gw:5000/v1/api/ws
    networks:
      - cryptalis-trading-network
  cryptalis-trading-db:
    image: ankane/pgvector
    container_name: cryptalis-trading-db
    env_file: app/.env
    restart: on-failure
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - cryptalis-trading-network
    ports:
      - '5432:5432'
    volumes:
      - cryptalis-trading-db:/var/lib/postgresql/data

volumes:
  cryptalis-trading-db:
    driver: local